{"version":3,"sources":["hooks/use-filters.ts","hooks/use-download-filter-image.ts","components/Preview/index.tsx","components/GithubCorner/index.tsx","components/Note/index.tsx","components/UploadInput/index.tsx","App/index.tsx","index.tsx"],"names":["useFilters","initialFilterName","useState","selectedFilterName","setSelectedFilterName","filter","createFilter","init","useEffect","applyFilter","useDownloadFilterImage","imageRef","useRef","download","a","downloadFileName","current","HTMLImageElement","TypeError","document","createElement","getDataURL","type","href","click","Preview","imageURL","onClear","className","id","src","data-filter","alt","toUpperCase","ref","onClick","filterNames","map","filterName","role","key","onKeyPress","GithubCorner","aria-label","title","width","height","viewBox","style","fill","color","position","top","border","right","aria-hidden","d","transformOrigin","Note","target","rel","UploadInput","onUpload","accept","onChange","LazyPreview","lazy","App","setImageURL","CSSTransition","in","timeout","classNames","fallback","files","URL","createObjectURL","rootElement","getElementById","hasChildNodes","hydrate","render","ReactGA","initialize","pageview","window","location","pathname","search"],"mappings":"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","file":"static/js/main.70bc839d.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { createFilter, FilterInstance } from 'cc-gram';\n\ninterface useFiltersOptions {\n  initialFilterName?: string;\n}\n\nexport const useFilters = ({\n  initialFilterName = '',\n}: useFiltersOptions = {}): {\n  selectedFilterName: string;\n  setSelectedFilterName: React.Dispatch<React.SetStateAction<string>>;\n  filter: FilterInstance;\n} => {\n  const [selectedFilterName, setSelectedFilterName] = useState(initialFilterName);\n\n  const filter = createFilter({ init: false });\n\n  useEffect(() => {\n    filter.applyFilter();\n  }, [selectedFilterName]);\n\n  return {\n    selectedFilterName,\n    setSelectedFilterName,\n    filter,\n  };\n};\n\nexport default useFilters;\n","import { useRef } from 'react';\nimport { FilterInstance } from 'cc-gram';\n\ninterface UseDownloadFilterImageOptions {\n  downloadFileName?: string;\n  filter: FilterInstance;\n}\n\ninterface DownloadOptions {\n  downloadFileName?: string\n}\n\nexport const useDownloadFilterImage = ({ filter }: UseDownloadFilterImageOptions): {\n  imageRef: React.RefObject<HTMLImageElement>;\n  download(downloadOptions: DownloadOptions): Promise<void>;\n} => {\n  const imageRef = useRef<HTMLImageElement>(null);\n\n  const download = async ({\n    downloadFileName = 'download',\n  } = {}) => {\n    const { current } = imageRef;\n    if (!current || !(current instanceof HTMLImageElement)) throw new TypeError('ref must be an image');\n\n    const a = document.createElement('a');\n    a.href = await filter.getDataURL(current, { type: 'image/jpeg' }) || '';\n    a.download = downloadFileName;\n    a.click();\n  };\n\n  return { imageRef, download };\n};\n\nexport default useDownloadFilterImage;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\nimport React from 'react';\n\nimport './Preview.scss';\n\nimport { useFilters, useDownloadFilterImage } from '../../hooks';\n\ninterface PreviewProps {\n  imageURL?: string;\n  onClear?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n}\n\nexport const Preview: React.FC<PreviewProps> = ({\n  imageURL,\n  onClear,\n}) => {\n  if (!imageURL) return null;\n\n  const { filter, selectedFilterName, setSelectedFilterName } = useFilters();\n  const { imageRef, download } = useDownloadFilterImage({ filter });\n\n  return (\n    <div className=\"preview\">\n      <div className=\"image-container\">\n        <img\n          id=\"preview-image\"\n          src={imageURL}\n          data-filter={selectedFilterName}\n          alt={selectedFilterName.toUpperCase()}\n          ref={imageRef}\n        />\n        <button\n          type=\"button\"\n          className=\"btn btn-cross\"\n          onClick={onClear}\n        >\n          <i className=\"fa fa-times\" />\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-download\"\n          onClick={() => download({ downloadFileName: selectedFilterName })}\n        >\n          <i className=\"fas fa-cloud-download-alt\" />\n        </button>\n      </div>\n\n      <div className=\"filters-container\">\n        {\n          filter.filterNames.map((filterName: string) => (\n            <figure\n              role=\"button\"\n              className={selectedFilterName === filterName ? 'selected' : ''}\n              key={filterName}\n              onClick={() => setSelectedFilterName(filterName)}\n              onKeyPress={() => setSelectedFilterName(filterName)}\n            >\n              <img\n                src={imageURL}\n                data-filter={filterName}\n                alt={filterName.toUpperCase()}\n              />\n              <figcaption>{filterName.toUpperCase()}</figcaption>\n            </figure>\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Preview;\n","import React from 'react';\nimport './GithubCorner.scss';\n\nexport const GithubCorner: React.FC = () => (\n  <a\n    href=\"https://github.com/EastSun5566/cc-gram\"\n    className=\"github-corner\"\n    aria-label=\"View source on GitHub\"\n    title=\"View source on GitHub\"\n  >\n    <svg\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 250 250\"\n      style={{\n        fill: '#151513', color: '#fff', position: 'absolute', top: 0, border: 0, right: 0,\n      }}\n      aria-hidden=\"true\"\n    >\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n      <path\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n        fill=\"currentColor\"\n        style={{ transformOrigin: '130px 106px' }}\n        className=\"octo-arm\"\n      />\n      <path\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n        fill=\"currentColor\"\n        className=\"octo-body\"\n      />\n    </svg>\n  </a>\n);\n\nexport default GithubCorner;\n","import React from 'react';\n\nexport const Note: React.FC = () => (\n  <small className=\"d-block text-center my-3\">\n    Made with\n    <span role=\"img\" aria-label=\"heart\"> ❤️ </span>\n    By\n    <a\n      href=\"https://github.com/EastSun5566\"\n      className=\"badge badge-pill badge-dark\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      EastSun5566\n    </a>\n  </small>\n);\n\nexport default Note;\n","import React from 'react';\n\nimport './UploadInput.scss';\n\ninterface UploadInputProps {\n  onUpload?: (event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nexport const UploadInput: React.FC<UploadInputProps> = ({ onUpload }) => (\n  <div className=\"input-container\">\n    <i className=\"fas fa-cloud-upload-alt\" />\n    <input\n      type=\"file\"\n      accept=\"image/*\"\n      onChange={onUpload}\n    />\n  </div>\n);\n\nexport default UploadInput;\n","import React, { useState, lazy, Suspense } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport {\n  UploadInput,\n  GithubCorner,\n  Note,\n} from '../components';\n\nimport './App.scss';\n\nconst LazyPreview = lazy(() => import('../components/Preview'));\n\nconst App: React.FC = () => {\n  const [imageURL, setImageURL] = useState('');\n\n  return (\n    <>\n      <div id=\"app\">\n        <h4 className=\"title my-3\">🖼 CCgram</h4>\n\n        <CSSTransition\n          in={!!imageURL}\n          timeout={200}\n          classNames=\"fade\"\n        >\n          {imageURL\n            ? (\n              <Suspense fallback={<p>loading...</p>}>\n                <LazyPreview\n                  imageURL={imageURL}\n                  onClear={() => setImageURL('')}\n                />\n              </Suspense>\n            )\n            : (\n              <UploadInput\n                onUpload={\n                  ({ target }) => target.files && setImageURL(URL.createObjectURL(target.files[0]))\n                }\n              />\n            )}\n        </CSSTransition>\n\n        <Note />\n      </div>\n\n      <GithubCorner />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\n\nimport ReactGA from 'react-ga';\n\nimport './index.scss';\n\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById('root');\nif (rootElement?.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\nReactGA.initialize('G-YGB6NCEQVB');\nReactGA.pageview(window.location.pathname + window.location.search);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}