{"version":3,"sources":["components/UploadInput/UploadInput.tsx","cg.ts","components/Preview/Preview.tsx","components/GithubCorner/GithubCorner.tsx","components/Note/Note.tsx","App/App.tsx","index.tsx"],"names":["UploadInput","setImageURL","className","type","accept","onChange","target","files","URL","createObjectURL","cg","CCGram","init","Preview","imageURL","useState","selectedFilter","setSelectedFilter","image","useRef","useEffect","applyFilter","download","a","current","Error","document","createElement","getDataURL","href","click","id","src","data-filter","alt","toUpperCase","ref","onClick","filterNames","map","filterName","role","key","onKeyPress","GithubCorner","aria-label","title","width","height","viewBox","style","fill","color","position","top","border","right","aria-hidden","d","transformOrigin","Note","rel","App","CSSTransition","in","timeout","classNames","ReactDOM","render","getElementById"],"mappings":"2TAoBeA,G,YAdV,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACH,yBAAKC,UAAU,mBACb,uBAAGA,UAAU,4BACb,2BACEC,KAAK,OACLC,OAAO,UACPC,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACNA,EAAOC,OACZN,EAAYO,IAAIC,gBAAgBH,EAAOC,MAAM,W,sCCZxCG,EAAK,I,OAAIC,GAAO,CAAEC,MAAM,IC8EtBC,EAtEV,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUb,EAAkB,EAAlBA,YAAkB,EACUc,mBAAS,IADnB,mBAC3BC,EAD2B,KACXC,EADW,KAE5BC,EAAQC,iBAAyB,MAEvCC,qBAAU,WACRV,EAAGW,YAAY,oBACd,CAACL,IAEJ,IAAMM,EAAQ,uCAAG,mBAAAC,EAAA,SAAAA,EAAA,yDACPC,EAAYN,EAAZM,QADO,sBAEK,IAAIC,MAAM,YAFf,cAITF,EAAIG,SAASC,cAAc,KAJlB,SAKAjB,EAAGkB,WAAWJ,GALd,OAKfD,EAAEM,KALa,OAMfN,EAAED,SAAWN,EACbO,EAAEO,QAPa,2CAAH,qDAUd,OACE,yBAAK5B,UAAU,WAEb,yBAAKA,UAAU,mBACb,yBACE6B,GAAG,gBACHC,IAAKlB,EACLmB,cAAajB,EACbkB,IAAKlB,EAAemB,cACpBC,IAAKlB,IAEP,4BACEf,KAAK,SACLD,UAAU,gBACVmC,QAAS,kBAAMpC,EAAY,MAE3B,uBAAGC,UAAU,iBAEf,4BACEC,KAAK,SACLD,UAAU,mBACVmC,QAASf,GAET,uBAAGpB,UAAU,gCAIjB,yBAAKA,UAAU,qBAEXQ,EAAG4B,YAAYC,KAAI,SAACC,GAAD,OACjB,4BACEC,KAAK,SACLvC,UAAWc,IAAmBwB,EAAa,WAAa,GACxDE,IAAKF,EACLH,QAAS,kBAAMpB,EAAkBuB,IACjCG,WAAY,kBAAM1B,EAAkBuB,KAEpC,yBACER,IAAKlB,EACLmB,cAAaO,EACbN,IAAKM,EAAWL,gBAElB,oCAAaK,EAAWL,sBCnCvBS,G,MAhCgB,kBAC7B,uBACEf,KAAK,yCACL3B,UAAU,gBACV2C,aAAW,wBACXC,MAAM,yBAEN,yBACEC,MAAM,KACNC,OAAO,KACPC,QAAQ,cACRC,MAAO,CACLC,KAAM,UAAWC,MAAO,OAAQC,SAAU,WAAYC,IAAK,EAAGC,OAAQ,EAAGC,MAAO,GAElFC,cAAY,QAEZ,0BAAMC,EAAE,sDACR,0BACEA,EAAE,2LACFP,KAAK,eACLD,MAAO,CAAES,gBAAiB,eAC1BzD,UAAU,aAEZ,0BACEwD,EAAE,shBACFP,KAAK,eACLjD,UAAU,kBCXH0D,EAhBQ,kBACrB,2BAAO1D,UAAU,4BAAjB,YAEE,0BAAMuC,KAAK,MAAMI,aAAW,SAA5B,kBAFF,KAIE,uBACEhB,KAAK,iCACL3B,UAAU,8BACVI,OAAO,SACPuD,IAAI,cAJN,iBCwCWC,EAnCC,WAAO,IAAD,EACY/C,mBAAS,IADrB,mBACbD,EADa,KACHb,EADG,KAOpB,OAJAmB,qBAAU,WACRV,EAAGW,gBACF,CAACP,IAGF,oCACE,yBAAKiB,GAAG,OACN,wBAAI7B,UAAU,cAAd,uBAEA,kBAAC6D,EAAA,EAAD,CACEC,KAAMlD,EACNmD,QAAS,IACTC,WAAW,QAEVpD,EAEG,kBAAC,EAAD,CACEA,SAAUA,EACVb,YAAaA,IAGf,kBAAC,EAAD,CAAaA,YAAaA,KAGhC,kBAAC,EAAD,OAGF,kBAAC,EAAD,QCpCNkE,IAASC,OAAO,kBAAC,EAAD,MAAS1C,SAAS2C,eAAe,W","file":"static/js/main.6648e7fb.chunk.js","sourcesContent":["import React from 'react';\n\nimport './UploadInput.scss';\n\nconst UploadInput: React.FC<{\n  setImageURL: React.Dispatch<React.SetStateAction<string>>;\n}> = ({ setImageURL }) => (\n  <div className=\"input-container\">\n    <i className=\"fas fa-cloud-upload-alt\" />\n    <input\n      type=\"file\"\n      accept=\"image/*\"\n      onChange={({ target }) => {\n        if (!target.files) return;\n        setImageURL(URL.createObjectURL(target.files[0]));\n      }}\n    />\n  </div>\n);\n\nexport default UploadInput;\n","import CCGram from 'cc-gram';\n\nexport const cg = new CCGram({ init: false });\n\nexport default cg;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\nimport React, { useState, useEffect, useRef } from 'react';\n\nimport './Preview.scss';\n\nimport { cg } from '../../cg';\n\nconst Preview: React.FC<{\n  imageURL: string;\n  setImageURL: React.Dispatch<React.SetStateAction<string>>;\n}> = ({ imageURL, setImageURL }) => {\n  const [selectedFilter, setSelectedFilter] = useState('');\n  const image = useRef<HTMLImageElement>(null);\n\n  useEffect(() => {\n    cg.applyFilter('#preview-image');\n  }, [selectedFilter]);\n\n  const download = async () => {\n    const { current } = image;\n    if (!current) throw new Error('No Image');\n\n    const a = document.createElement('a');\n    a.href = await cg.getDataURL(current);\n    a.download = selectedFilter;\n    a.click();\n  };\n\n  return (\n    <div className=\"preview\">\n\n      <div className=\"image-container\">\n        <img\n          id=\"preview-image\"\n          src={imageURL}\n          data-filter={selectedFilter}\n          alt={selectedFilter.toUpperCase()}\n          ref={image}\n        />\n        <button\n          type=\"button\"\n          className=\"btn btn-cross\"\n          onClick={() => setImageURL('')}\n        >\n          <i className=\"fa fa-times\" />\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-download\"\n          onClick={download}\n        >\n          <i className=\"fas fa-cloud-download-alt\" />\n        </button>\n      </div>\n\n      <div className=\"filters-container\">\n        {\n          cg.filterNames.map((filterName) => (\n            <figure\n              role=\"button\"\n              className={selectedFilter === filterName ? 'selected' : ''}\n              key={filterName}\n              onClick={() => setSelectedFilter(filterName)}\n              onKeyPress={() => setSelectedFilter(filterName)}\n            >\n              <img\n                src={imageURL}\n                data-filter={filterName}\n                alt={filterName.toUpperCase()}\n              />\n              <figcaption>{filterName.toUpperCase()}</figcaption>\n            </figure>\n          ))\n        }\n      </div>\n\n    </div>\n  );\n};\n\nexport default Preview;\n","import React from 'react';\nimport './GithubCorner.scss';\n\nconst GithubCorner: React.FC = () => (\n  <a\n    href=\"https://github.com/EastSun5566/cc-gram\"\n    className=\"github-corner\"\n    aria-label=\"View source on GitHub\"\n    title=\"View source on GitHub\"\n  >\n    <svg\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 250 250\"\n      style={{\n        fill: '#151513', color: '#fff', position: 'absolute', top: 0, border: 0, right: 0,\n      }}\n      aria-hidden=\"true\"\n    >\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n      <path\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n        fill=\"currentColor\"\n        style={{ transformOrigin: '130px 106px' }}\n        className=\"octo-arm\"\n      />\n      <path\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n        fill=\"currentColor\"\n        className=\"octo-body\"\n      />\n    </svg>\n  </a>\n);\n\nexport default GithubCorner;\n","import React from 'react';\n\nconst Note: React.FC = () => (\n  <small className=\"d-block text-center my-3\">\n    Made with\n    <span role=\"img\" aria-label=\"heart\"> ‚ù§Ô∏è </span>\n    By\n    <a\n      href=\"https://github.com/EastSun5566\"\n      className=\"badge badge-pill badge-dark\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      EastSun5566\n    </a>\n  </small>\n);\n\nexport default Note;\n","import React, { FC, useState, useEffect } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './App.scss';\n\nimport UploadInput from '../components/UploadInput/UploadInput';\nimport Preview from '../components/Preview/Preview';\nimport GithubCorner from '../components/GithubCorner/GithubCorner';\nimport Note from '../components/Note/Note';\n\nimport { cg } from '../cg';\n\nconst App: FC = () => {\n  const [imageURL, setImageURL] = useState('');\n\n  useEffect(() => {\n    cg.applyFilter();\n  }, [imageURL]);\n\n  return (\n    <>\n      <div id=\"app\">\n        <h4 className=\"title my-3\">üñº CCgram</h4>\n\n        <CSSTransition\n          in={!!imageURL}\n          timeout={200}\n          classNames=\"fade\"\n        >\n          {imageURL\n            ? (\n              <Preview\n                imageURL={imageURL}\n                setImageURL={setImageURL}\n              />\n            )\n            : <UploadInput setImageURL={setImageURL} /> }\n        </CSSTransition>\n\n        <Note />\n      </div>\n\n      <GithubCorner />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}